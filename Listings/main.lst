C51 COMPILER V9.60.7.0   MAIN                                                              02/08/2023 07:34:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <regx52.h>
   2          #include "lcd1602.h"
   3          #include <string.h>
   4          #include "matrix_key.h"
   5          #include "calculator.h"
   6          #include <stdio.h>
   7          #include "ired.h"
   8          // 按键:
   9          // --------------------------------------------------
  10          
  11          //             - - - - - - - - - - - - -
  12          //             |  7  |  8  |  9  |  +  |
  13          //             - - - - - - - - - - - - -
  14          //             |  4  |  5  |  6  |  -  |
  15          //             - - - - - - - - - - - - -
  16          //         |  1  |  2  |  3  |  *  |
  17          //             - - - - - - - - - - - - -
  18          //             |  0  |  .  |  /  |  =  |
  19          //             - - - - - - - - - - - - -
  20          
  21          //             - - - - - - - - - - - - -
  22          //             |  (  |  )  |  B  |shift| //默认, B：是退格
  23          //             - - - - - - - - - - - - -
  24          //             |  <  |  >  |  C  |shift| //<>光标移动，C：清屏
  25          //             - - - - - - - - - - - - -
  26          
  27          // 遥控16进制
  28          // | 45 | 46 | 47 |    | C | S | O |
  29          // | 44 | 40 | 43 |    | ( | ) | B |
  30          // | 07 | 15 | 09 |    | + | - | x |
  31          // | 16 | 19 | 0d |    | 0 | . | / |
  32          // | 0c | 18 | 5e |    | 1 | 2 | 3 |
  33          // | 08 | 1c | 5a |    | 4 | 5 | 6 |
  34          // | 42 | 52 | 4a |    | 7 | 8 | 9 |
  35          
  36          u8 code shiftKeys[] = {'<', '>', 'C', 'S'};
  37          u8 code keys[] = {'7', '8', '9', '+', '4', '5', '6', '-', '1', '2', '3', 'x', '0', '.', '/', '=', '(', ')'
             -, 'B', 'S'};
  38          u8 code iredCodeArr[] = {'7', '8', '9', '4', '5', '6', '1', '2', '3', '0', '.', '/', '+', '-', 'x', '(', '
             -)', 'B', 'C', 'S', 'O'};
  39          
  40          u8 isShiftMode = 0;
  41          u8 isOpen = 1;
  42          u8 xdata express[256];
  43          u8 expressIndex = 0;
  44          u8 expressLen = 0;
  45          u8 cursor = 1;
  46          u8 displayString[14];
  47          u8 windowFirst = 0;
  48          
  49          u8 getCharByKey(u8 keycode)
  50          {
  51   1          if (!isShiftMode || keycode < 16)
  52   1          {
C51 COMPILER V9.60.7.0   MAIN                                                              02/08/2023 07:34:34 PAGE 2   

  53   2              return keys[keycode];
  54   2          }
  55   1          else
  56   1          {
  57   2              return shiftKeys[keycode - 16];
  58   2          }
  59   1      }
  60          
  61          void substring(char *str, int start, int end, char *sub)
  62          {
  63   1          int n = end - start;
  64   1          strncpy(sub, str + start, n);
  65   1          sub[n] = '\0';
  66   1      }
  67          
  68          void toCursor(u8 cursor)
  69          {
  70   1          u8 i;
  71   1          lcd1602_cursor_return();
  72   1          for (i = 0; i < cursor; i++)
  73   1          {
  74   2              lcd1602_cursor_shift(1);
  75   2          }
  76   1      }
  77          
  78          void showExpress(char *express)
  79          {
  80   1          u8 expressLen = strlen(express);
  81   1          if (expressLen >= 14)
  82   1          {
  83   2              windowFirst = expressLen - 14;
  84   2              substring(express, windowFirst, expressLen, displayString);
  85   2              lcd1602_string_set(1, 0, displayString);
  86   2              cursor = 14;
  87   2          }
  88   1          else
  89   1          {
  90   2              substring(express, 0, expressLen, displayString);
  91   2              lcd1602_clear();
  92   2              if (expressLen == 0)
  93   2              {
  94   3                  cursor = 1;
  95   3                  toCursor(cursor);
  96   3                  return;
  97   3              }
  98   2      
  99   2              lcd1602_string_set(1, 0, displayString);
 100   2              cursor = strlen(displayString) - 1;
 101   2          }
 102   1      }
 103          
 104          void removeChar(char str[], int index)
 105          {
 106   1          int len = strlen(str);
 107   1          int i;
 108   1          for (i = index; i < len - 1; i++)
 109   1          {
 110   2              str[i] = str[i + 1];
 111   2          }
 112   1          str[len - 1] = '\0';
 113   1      }
 114          
C51 COMPILER V9.60.7.0   MAIN                                                              02/08/2023 07:34:34 PAGE 3   

 115          void hander(char option);
 116          
 117          void handleIred(int iredCode)
 118          {
 119   1          u8 option = iredCodeArr[iredCode];
 120   1          hander(option);
 121   1      }
 122          
 123          void main()
 124          {
 125   1          u8 key, option, ired;
 126   1          lcd1602_init();
 127   1          lcd1602_display_switch(true, true, false);
 128   1          // ired_init();
 129   1          //     lcd1602_string_set(0,0,"1234567890abcde");
 130   1          // lcd1602_string_set(4,1,"world!");
 131   1      
 132   1          while (1)
 133   1          {
 134   2              //        continue;
 135   2              key = key_matrix_ranks_scan();
 136   2              if (key != -1)
 137   2              {
 138   3                  option = getCharByKey(key);
 139   3                  hander(option);
 140   3              }
 141   2      
 142   2              if (last_gired_data != -1)
 143   2              {
 144   3                  handleIred(ired);
 145   3                  last_gired_data = -1;
 146   3              }
 147   2          }
 148   1      }
 149          
 150          void hander(char option)
 151          {
 152   1          if (option == 'S')
 153   1          {
 154   2              isShiftMode = !isShiftMode;
 155   2              lcd1602_char_set(0, 0, isShiftMode ? 's' : ' ');
 156   2              // lcd1602_char_set(0, 0, ' ');
 157   2              toCursor(cursor);
 158   2              return;
 159   2          }
 160   1          if (option == 'C')
 161   1          {
 162   2              lcd1602_clear();
 163   2              lcd1602_char_set(0, 0, isShiftMode ? 's' : ' ');
 164   2              cursor = 1;
 165   2              express[0] = '\0';
 166   2              expressIndex = 0;
 167   2          }
 168   1      
 169   1          if (option == '<')
 170   1          {
 171   2              if (cursor == 1)
 172   2                  return;
 173   2              lcd1602_cursor_shift(0);
 174   2              cursor--;
 175   2              return;
 176   2          }
C51 COMPILER V9.60.7.0   MAIN                                                              02/08/2023 07:34:34 PAGE 4   

 177   1      
 178   1          if (option == '>')
 179   1          {
 180   2              if (cursor == 15)
 181   2                  return;
 182   2              lcd1602_cursor_shift(1);
 183   2              cursor++;
 184   2              return;
 185   2          }
 186   1      
 187   1          if (option == 'B') // backspace
 188   1          {
 189   2      
 190   2              expressLen = strlen(express);
 191   2              if (expressLen == 0)
 192   2              {
 193   3                  return;
 194   3              }
 195   2              removeChar(express, expressIndex);
 196   2              expressIndex--;
 197   2              showExpress(express);
 198   2      
 199   2              return;
 200   2          }
 201   1      
 202   1          if (option == '=')
 203   1          {
 204   2              double a = calculator(express);
 205   2              char result[16];
 206   2              u8 resultLen;
 207   2              sprintf(result, "%.10g", a);
 208   2              resultLen = strlen(result);
 209   2      
 210   2              lcd1602_string_set(0, 1, "                ");
 211   2              lcd1602_string_set(16 - resultLen, 1, result);
 212   2              toCursor(cursor + 2);
 213   2              return;
 214   2          }
 215   1      
 216   1          if (option == 'O')
 217   1          {
 218   2              if (isOpen)
 219   2              {
 220   3                  lcd1602_display_switch(0, 0, 0);
 221   3              }
 222   2              else
 223   2              {
 224   3                  lcd1602_display_switch(1, 1, 0);
 225   3              }
 226   2              isOpen = !isOpen;
 227   2              return;
 228   2          }
 229   1      
 230   1          if ((option >= '0' && option <= '9') || option == '+' || option == '-' || option == 'x' || option == '
             -/' || option == '(' || option == ')' || option == '.')
 231   1          {
 232   2              if (strlen(express) >= 255)
 233   2              {
 234   3                  lcd1602_string_set(0, 1, "max 255 char!");
 235   3                  return;
 236   3              }
 237   2              express[expressIndex++] = option;
C51 COMPILER V9.60.7.0   MAIN                                                              02/08/2023 07:34:34 PAGE 5   

 238   2              express[expressIndex] = '\0';
 239   2      
 240   2              showExpress(express);
 241   2          }
 242   1      }
 243          
 244          void ired() interrupt 0 // 外部中断0服务函数
 245          {
 246   1          parseIred();
 247   1      }
*** WARNING C316 IN LINE 247 OF main.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    959    ----
   CONSTANT SIZE    =     82    ----
   XDATA SIZE       =    256    ----
   PDATA SIZE       =     20      48
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
